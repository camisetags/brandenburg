service: brandenburg

custom:
  env: ${opt:stage, 'dev'}
  project_id: ${opt:project_id}
  pythonRequirements:
    # pythonBin: ${opt:python_bin}
    invalidateCaches: true
  #   # dockerizePip: true
  #   # slim: true
  #   # dockerFile: Dockerfile
  #   # compatibleRuntimes:
  #     # - python3.7
    noDeploy:
      - pytest
      - pytest-cov
      - pytest-asyncio
      - pytest-sanic
      - codecov
      - mypy
      - black
      - isort

provider:
  name: google
  stage: ${self:custom.env}
  # runtime: python37
  region: us-east1
  project: ${self:custom.project_id}
  memorySize: 128
  credentials: ./brandenburg.json
  environment:
    GOOGLE_PROJECT_ID: ${self:custom.project_id}

plugins:
  - serverless-google-cloudfunctions
  - serverless-python-requirements
package:
  include:
    - brandenburg/**
  exclude:
    - node_modules/**
    - .gitignore
    - .git/**
    - '**/*.sw*'

functions:
  salesforce:
   handler: salesforce
   events:
     - event:
         eventType: providers/cloud.pubsub/eventTypes/topic.publish
         resource: projects/${self:custom.project_id}/topics/salesforce_${self:custom.env}

# you can define resources, templates etc. the same way you would in a
# Google Cloud deployment configuration
#resources:
#  resources:
#    - type: storage.v1.bucket
#      name: my-serverless-service-bucket
#  imports:
#    - path: my_template.jinja
